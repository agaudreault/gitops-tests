apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations:
    argocd.argoproj.io/tracking-id: prod-west:/ServiceAccount:default/prod-west-mariadb
  labels:
    app.kubernetes.io/instance: prod-west
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-13.0.1
  name: prod-west-mariadb
  namespace: default

---

apiVersion: v1
data:
  mariadb-password: Wk90ZVZZY2Z1eA==
  mariadb-root-password: azRaVFNGbWZ6OQ==
kind: Secret
metadata:
  annotations:
    argocd.argoproj.io/tracking-id: prod-west:/Secret:default/prod-west-mariadb
  labels:
    app.kubernetes.io/instance: prod-west
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-13.0.1
  name: prod-west-mariadb
  namespace: default
type: Opaque

---

apiVersion: v1
data:
  wordpress-password: UkVwYlpiOW1KOA==
kind: Secret
metadata:
  annotations:
    argocd.argoproj.io/tracking-id: prod-west:/Secret:default/prod-west-app
  labels:
    app.kubernetes.io/instance: prod-west
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: app
    helm.sh/chart: app-17.0.5
  name: prod-west-app
  namespace: default
type: Opaque

---

apiVersion: v1
data:
  my.cnf: |-
    [mysqld]
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mariadb
    datadir=/bitnami/mariadb/data
    plugin_dir=/opt/bitnami/mariadb/plugin
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    tmpdir=/opt/bitnami/mariadb/tmp
    max_allowed_packet=16M
    bind-address=*
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    log-error=/opt/bitnami/mariadb/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci
    slow_query_log=0
    long_query_time=10.0

    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mariadb/plugin

    [manager]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
kind: ConfigMap
metadata:
  annotations:
    argocd.argoproj.io/tracking-id: prod-west:/ConfigMap:default/prod-west-mariadb
  labels:
    app.kubernetes.io/component: primary
    app.kubernetes.io/instance: prod-west
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-13.0.1
  name: prod-west-mariadb
  namespace: default

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    argocd.argoproj.io/tracking-id: prod-west:/PersistentVolumeClaim:default/prod-west-app
  labels:
    app.kubernetes.io/instance: prod-west
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: app
    helm.sh/chart: app-17.0.5
  name: prod-west-app
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---

apiVersion: v1
kind: Service
metadata:
  annotations:
    argocd.argoproj.io/tracking-id: prod-west:/Service:default/prod-west-mariadb
  labels:
    app.kubernetes.io/component: primary
    app.kubernetes.io/instance: prod-west
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-13.0.1
  name: prod-west-mariadb
  namespace: default
spec:
  ports:
  - name: mysql
    nodePort: null
    port: 3306
    protocol: TCP
    targetPort: mysql
  selector:
    app.kubernetes.io/component: primary
    app.kubernetes.io/instance: prod-west
    app.kubernetes.io/name: mariadb
  sessionAffinity: None
  type: ClusterIP

---

apiVersion: v1
kind: Service
metadata:
  annotations:
    argocd.argoproj.io/tracking-id: prod-west:/Service:default/prod-west-app
  labels:
    app.kubernetes.io/instance: prod-west
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: app
    helm.sh/chart: app-17.0.5
  name: prod-west-app
  namespace: default
spec:
  externalTrafficPolicy: Cluster
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  - name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/instance: prod-west
    app.kubernetes.io/name: app
  sessionAffinity: None
  type: LoadBalancer

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    argocd.argoproj.io/tracking-id: prod-west:apps/Deployment:default/prod-west-app
  labels:
    app.kubernetes.io/instance: prod-west
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: app
    helm.sh/chart: app-17.0.5
  name: prod-west-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: prod-west
      app.kubernetes.io/name: app
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: prod-west
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: app
        helm.sh/chart: app-17.0.5
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: prod-west
                  app.kubernetes.io/name: app
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        - name: MARIADB_HOST
          value: prod-west-mariadb
        - name: MARIADB_PORT_NUMBER
          value: "3306"
        - name: WORDPRESS_DATABASE_NAME
          value: bitnami_wordpress
        - name: WORDPRESS_DATABASE_USER
          value: bn_wordpress
        - name: WORDPRESS_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mariadb-password
              name: prod-west-mariadb
        - name: WORDPRESS_USERNAME
          value: user
        - name: WORDPRESS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: wordpress-password
              name: prod-west-app
        - name: WORDPRESS_EMAIL
          value: user@example.com
        - name: WORDPRESS_FIRST_NAME
          value: FirstName
        - name: WORDPRESS_LAST_NAME
          value: LastName
        - name: WORDPRESS_HTACCESS_OVERRIDE_NONE
          value: "no"
        - name: WORDPRESS_ENABLE_HTACCESS_PERSISTENCE
          value: "no"
        - name: WORDPRESS_BLOG_NAME
          value: User's Blog!
        - name: WORDPRESS_SKIP_BOOTSTRAP
          value: "no"
        - name: WORDPRESS_TABLE_PREFIX
          value: wp_
        - name: WORDPRESS_SCHEME
          value: http
        - name: WORDPRESS_EXTRA_WP_CONFIG_CONTENT
          value: ""
        - name: WORDPRESS_PLUGINS
          value: none
        - name: APACHE_HTTP_PORT_NUMBER
          value: "8080"
        - name: APACHE_HTTPS_PORT_NUMBER
          value: "8443"
        envFrom: null
        image: docker.io/bitnami/wordpress:6.2.2-debian-11-r82
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          httpGet:
            httpHeaders: []
            path: /wp-admin/install.php
            port: http
            scheme: HTTP
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: wordpress
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8443
          name: https
        readinessProbe:
          failureThreshold: 6
          httpGet:
            httpHeaders: []
            path: /wp-login.php
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits: {}
          requests:
            cpu: 300m
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1001
        volumeMounts:
        - mountPath: /bitnami/wordpress
          name: wordpress-data
          subPath: wordpress
      hostAliases:
      - hostnames:
        - status.localhost
        ip: 127.0.0.1
      securityContext:
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: default
      volumes:
      - name: wordpress-data
        persistentVolumeClaim:
          claimName: prod-west-app

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    argocd.argoproj.io/tracking-id: prod-west:apps/StatefulSet:default/prod-west-mariadb
  labels:
    app.kubernetes.io/component: primary
    app.kubernetes.io/instance: prod-west
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-13.0.1
  name: prod-west-mariadb
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: prod-west
      app.kubernetes.io/name: mariadb
  serviceName: prod-west-mariadb
  template:
    metadata:
      annotations:
        checksum/configuration: 118f46c93fdcb3b7b6624e5340ad13eed950d7f9018c77ba4a5f9b8349b2fde5
      labels:
        app.kubernetes.io/component: primary
        app.kubernetes.io/instance: prod-west
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mariadb
        helm.sh/chart: mariadb-13.0.1
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: primary
                  app.kubernetes.io/instance: prod-west
                  app.kubernetes.io/name: mariadb
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: MARIADB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mariadb-root-password
              name: prod-west-mariadb
        - name: MARIADB_USER
          value: bn_wordpress
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mariadb-password
              name: prod-west-mariadb
        - name: MARIADB_DATABASE
          value: bitnami_wordpress
        image: docker.io/bitnami/mariadb:11.0.2-debian-11-r2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -ec
            - |
              password_aux="${MARIADB_ROOT_PASSWORD:-}"
              if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                  password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
              fi
              mysqladmin status -uroot -p"${password_aux}"
          failureThreshold: 3
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: mariadb
        ports:
        - containerPort: 3306
          name: mysql
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -ec
            - |
              password_aux="${MARIADB_ROOT_PASSWORD:-}"
              if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                  password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
              fi
              mysqladmin status -uroot -p"${password_aux}"
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits: {}
          requests: {}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          runAsNonRoot: true
          runAsUser: 1001
        volumeMounts:
        - mountPath: /bitnami/mariadb
          name: data
        - mountPath: /opt/bitnami/mariadb/conf/my.cnf
          name: config
          subPath: my.cnf
      securityContext:
        fsGroup: 1001
      serviceAccountName: prod-west-mariadb
      volumes:
      - configMap:
          name: prod-west-mariadb
        name: config
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      labels:
        app.kubernetes.io/component: primary
        app.kubernetes.io/instance: prod-west
        app.kubernetes.io/name: mariadb
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi

---

